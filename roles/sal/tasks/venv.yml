---
# sal/tasks/venv.yml
- name: venv - easy_install pip
  sudo: True
  easy_install: name=pip

- name: venv - pip install virtualenv 1.10.1
  sudo: True
  pip: name=virtualenv
       version=1.10.1

- name: venv - copy virtualenv wrapper
  sudo: True
  template: src=venv_exec.j2
            dest={{ sal_env_path }}/exec
            owner={{ sal_user }}
            group={{ sal_group }}
            mode=0755

- name: venv - pip install sal dependencies
  sudo: True
  pip: requirements={{ sal_env_path }}/sal/setup/requirements.txt
       virtualenv={{ sal_env_path }}
       virtualenv_site_packages=yes

- name: venv - pip install MySQL-python in virtualenv if needed
  sudo: True
  pip: name=MySQL-python
       virtualenv={{ sal_env_path }}
  when: sal_use_mysql == True

- name: venv - do some stuff in virtualenv
  sudo: True
  command: "{{ sal_env_path }}/exec python {{ sal_env_path }}/sal/manage.py {{ item }}"
  with_items:
    - "syncdb --noinput"
    - "migrate"
    - "collectstatic --noinput"

- name: venv - copy our one-liner to create sqlite db superuser and passwd
  sudo: True
  template: src=django_create_superuser_pass.sh.j2
            dest={{ sal_env_path }}/django_create_superuser_pass.sh
            owner={{ sal_user }}
            group={{ sal_group }}
            mode=0755

- name: venv - run our one-liner to create db superuser and passwd
  sudo: True
  script: "{{ sal_env_path }}/django_create_superuser_pass.sh"

- name: venv - remove our one-liner
  sudo: True
  file: path={{ sal_env_path }}/sqlite_create_superuser_pass.sh state=absent
  when: sal_use_mysql == False

- name: venv - ensure permissions of sal_env
  sudo: True
  file: path={{ sal_env_path }}
        owner={{ sal_user }}
        group={{ sal_group }}
        state=directory
        recurse=yes
